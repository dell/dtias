tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://fileserver-svc/data/.artifacts/types/types-6.3.0.yaml
  - plugin:dtias-ansible-plugin

inputs:
  site_yaml_relative_path:
    type: string
    default: playbooks/site.yml

  hosts_relative_path:
    type: string
    default: hosts

  ssh_private_key_secret:
    type: string
    description: SSH private key contents as string

  pxe_server_ip:
    type: string
    description: "IP address of the PXE server (e.g., 192.168.35.133)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"

  pxe_server_ssh_user:
    type: string
    description: "The SSH user for the PXE server"
    default: root

  dhcp_subnet:
    type: string
    description: "Subnet in CIDR format (e.g., 192.168.35.0/24)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}/(?:[0-9]|[1-2][0-9]|3[0-2])$"
  
  dhcp_range_start:
    type: string
    description: "Start of the DHCP range (IPv4 format, e.g., 192.168.35.50)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$"

  dhcp_range_end:
    type: string
    description: "End of the DHCP range (IPv4 format, e.g., 192.168.35.100)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$"

  gateway:
    type: string
    description: "Default gateway (IPv4 format, e.g., 192.168.35.1)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$"

  dns_server:
    type: string
    description: "DNS server address (IPv4 format, e.g., 8.8.8.8)"
    constraints:
      - pattern: "^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$"

  iso_path:
    type: string
    default: "/opt/Rocky-9.4-x86_64-minimal.iso"

  http_port:
    type: string
    default: "8080"

  httpd_container_image:
    type: string
    default: "docker.io/library/httpd:latest"

  target_hosts:
    type: dict
    description: "Target hosts with nested 'mac_address' and 'static_ip' keys. Example: {'target1': {'mac_address': '00:0C:29:79:AD:78', 'static_ip': '192.168.35.50'}, 'target2': {'mac_address': '00:0C:29:22:FB:72', 'static_ip': '192.168.35.51'}}"
    default:
      target1:
        mac_address: "00:0C:29:79:AD:78"
        static_ip: "192.168.35.50"
      target2:
        mac_address: "00:0C:29:22:FB:72"
        static_ip: "192.168.35.51"

  firewall_services:
    type: list
    default: ["dhcp", "tftp", "http"]

node_templates:
  ansible_playbook:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            site_yaml_path: { get_input: site_yaml_relative_path }
            sources: { get_input: hosts_relative_path }
            run_data:
              ssh_private_key_file: { get_secret: { get_input: ssh_private_key_secret } }
              ssh_user: { get_input: pxe_server_ssh_user }
              variables:
                pxe_server_ip: { get_input: pxe_server_ip }
                dhcp_subnet: { get_input: dhcp_subnet }
                dhcp_range_start: { get_input: dhcp_range_start }
                dhcp_range_end: { get_input: dhcp_range_end }
                gateway: { get_input: gateway }
                dns_server: { get_input: dns_server }
                iso_path: { get_input: iso_path }
                http_port: { get_input: http_port }
                httpd_container_image: { get_input: httpd_container_image }
                target_hosts: { get_input: target_hosts }
                firewall_services: { get_input: firewall_services }
